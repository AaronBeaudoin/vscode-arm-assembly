{
  "scopeName": "source.armassem",
  "name": "ARM Assembly",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#line"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "include": "#comment-singleline"
        },
        {
          "include": "#comment-multiline"
        }
      ]
    },
    "comment-singleline": {
      "match": "(?:(?:@|\\/\\/)[^\\n]*)",
      "name": "comment.armassem"
    },
    "comment-multiline": {
      "begin": "(?:/\\*)",
      "end": "(?:\\*/)",
      "name": "comment.armassem"
    },
    "literal": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#string-multiquote"
        },
        {
          "include": "#string-singlequote"
        },
        {
          "include": "#label-immediate"
        },
        {
          "include": "#register"
        },
        {
          "include": "#numeric-immediate"
        },
        {
          "include": "#numeric-simple"
        }
      ]
    },
    "string-multiquote": {
      "match": "(?:\"(?:\\\\\"|[^\"])*\")",
      "name": "string.armassem"
    },
    "string-singlequote": {
      "match": "(?:'(?:\\\\'|[^'])*')",
      "name": "string.armassem"
    },
    "label-immediate": {
      "match": "(?:=((?:\\\\@|(?!\\/\\/|\\/\\*)[^\\n\\t \"',\\]\\}@])+))",
      "captures": {
        "1": {
          "name": "variable.armassem"
        }
      }
    },
    "register": {
      "match": "(?i)(?:r[0-9]+|sp|lr|pc|apsr|cpsr)",
      "name": "storage.armassem"
    },
    "numeric-immediate": {
      "match": "(?i)(?:(?:#|=)[0-9a-z-]+)",
      "name": "constant.armassem"
    },
    "numeric-simple": {
      "match": "(?:[0-9]+)",
      "name": "constant.armassem"
    },
    "line": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#line-label"
        },
        {
          "include": "#line-simple"
        }
      ]
    },
    "line-label": {
      "match": "(?:([^\\n\\t :]+):)(?:[\\t ]([^\\n]+))?",
      "captures": {
        "1": {
          "name": "variable.armassem"
        },
        "2": {
          "patterns": [
            {
              "include": "#statement"
            }
          ]
        }
      }
    },
    "line-simple": {
      "match": "(?:[\\t ]*([^\\n]+))",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#statement"
            }
          ]
        }
      }
    },
    "statement": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#directive"
        },
        {
          "include": "#instruction"
        }
      ]
    },
    "directive": {
      "patterns": [
        {
          "include": "#directive-label"
        },
        {
          "include": "#directive-macro"
        },
        {
          "include": "#directive-generic"
        }
      ]
    },
    "directive-label": {
      "match": "(?i)(?:\\.(global)[\\t ]+([^\\n\\t ]+))",
      "captures": {
        "1": {
          "name": "keyword.armassem"
        },
        "2": {
          "name": "variable.armassem"
        }
      }
    },
    "directive-macro": {
      "match": "(?i)(?:\\.(macro)[\\t ]+([^\\n\\t ]+)([\\t ]+[^\\n]+)?)",
      "captures": {
        "1": {
          "name": "keyword.armassem"
        },
        "2": {
          "name": "entity.name.tag.armassem"
        },
        "3": {
          "patterns": [
            {
              "include": "#literal"
            }
          ]
        }
      }
    },
    "directive-generic": {
      "match": "(?:\\.([^\\n\\t ]+)([^\\n]*))",
      "captures": {
        "1": {
          "name": "keyword.armassem"
        },
        "2": {
          "patterns": [
            {
              "include": "#literal"
            }
          ]
        }
      }
    },
    "instruction": {
      "patterns": [
        {
          "include": "#instruction-label"
        },
        {
          "include": "#instruction-generic"
        }
      ]
    },
    "instruction-label": {
      "match": "(?i)(?:(b[^fik][^\\n\\t ]*|b)[\\t ]+([^\\n\\t ]+))",
      "captures": {
        "1": {
          "name": "entity.name.tag.armassem"
        },
        "2": {
          "name": "variable.armassem"
        }
      }
    },
    "instruction-generic": {
      "match": "(?:([^\\n\\t ]+)([^\\n]*))",
      "captures": {
        "1": {
          "name": "entity.name.tag.armassem"
        },
        "2": {
          "patterns": [
            {
              "include": "#literal"
            }
          ]
        }
      }
    }
  }
}
